name: "Bundler Audit"
run-name: Bundler Audit (${{ github.ref_name }} -> ${{ inputs.environment }}) by @${{ github.actor }}

on:
  workflow_dispatch:
    inputs:
      baseTarget:
        description: "Used to set your target for the base image"
        required: false
        type: string
      bundler_audit_cmd:
        required: false
        type: string
        default: docker compose run web bundle exec bundler audit check --update
      solrTarget:
        description: "Used to set your target for the solr image"
        required: false
        type: string
      subdir:
        default: '.'
        type: string
      tag:
        required: false
        type: string
      webTarget:
        description: "Used to set your target for the web image"
        required: false
        type: string
      workerTarget:
        description: "Used to set your target for the worker image"
        required: false
        type: string
  workflow_call:
    inputs:
      baseTarget:
        description: "Used to set your target for the base image"
        required: false
        type: string
      bundler_audit_cmd:
        required: false
        type: string
        default: docker compose run web bundle exec bundler audit check --update
      solrTarget:
        description: "Used to set your target for the solr image"
        required: false
        type: string
      subdir:
        default: '.'
        type: string
      tag:
        required: false
        type: string
      webTarget:
        description: "Used to set your target for the web image"
        required: false
        type: string
      workerTarget:
        description: "Used to set your target for the worker image"
        required: false
        type: string

env:
  REGISTRY: ghcr.io

jobs:
  bundler-audit:
    runs-on: ubuntu-latest
    steps:
      - id: setup
        name: Setup
        uses: scientist-softserv/actions/setup-env@v0.0.14
        with:
          tag: ${{ inputs.tag }}
          token: ${{ secrets.CHECKOUT_TOKEN || secrets.GITHUB_TOKEN }}
      - name: Github Container Login
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Pull base image to prevent build
        if: ${{ inputs.baseTarget != '' }}
        run: >-
          cd ${{ inputs.subdir }};
          docker-compose pull base
      - name: Pull solr image to prevent build
        if: ${{ inputs.solrTarget != '' }}
        run: >-
          cd ${{ inputs.subdir }};
          docker-compose pull solr
      - name: Pull web image to prevent build
        if: ${{ inputs.webTarget != '' }}
        run: >-
          cd ${{ inputs.subdir }};
          touch .env.development;
          touch .env;
          docker-compose pull web
      - name: Pull worker image to prevent build
        if: ${{ inputs.workerTarget != '' }}
        run: >-
          cd ${{ inputs.subdir }};
          docker-compose pull worker
      - name: Run Bundle Audit
        run: >-
          cd ${{ inputs.subdir }};
          ${{ inputs.bundler_audit_cmd }}
      - name: Publish Test Report
        uses: mikepenz/action-junit-report@v3
        if: always() # always run even if the previous step fails
        with:
          report_paths: 'bundle-audit*.xml'